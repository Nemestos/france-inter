/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Output } from "./components/design-system/output-carousel/output.type";
export namespace Components {
    interface HeadlineSystem {
        "headline": string;
    }
    interface ItemSystem {
        "active": boolean;
        "attribute": string | boolean;
        "checked": boolean;
        "invalide": boolean;
        "toggle": boolean;
        "value": string;
    }
    interface OutputCarousel {
    }
    interface OutputItem {
        "output": Output;
    }
    interface ShowcaseUi {
        "displaying": string;
        "imageData": string;
        "newMessage": string;
        "persons": number;
        "username": string;
    }
}
export interface ItemSystemCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLItemSystemElement;
}
declare global {
    interface HTMLHeadlineSystemElement extends Components.HeadlineSystem, HTMLStencilElement {
    }
    var HTMLHeadlineSystemElement: {
        prototype: HTMLHeadlineSystemElement;
        new (): HTMLHeadlineSystemElement;
    };
    interface HTMLItemSystemElement extends Components.ItemSystem, HTMLStencilElement {
    }
    var HTMLItemSystemElement: {
        prototype: HTMLItemSystemElement;
        new (): HTMLItemSystemElement;
    };
    interface HTMLOutputCarouselElement extends Components.OutputCarousel, HTMLStencilElement {
    }
    var HTMLOutputCarouselElement: {
        prototype: HTMLOutputCarouselElement;
        new (): HTMLOutputCarouselElement;
    };
    interface HTMLOutputItemElement extends Components.OutputItem, HTMLStencilElement {
    }
    var HTMLOutputItemElement: {
        prototype: HTMLOutputItemElement;
        new (): HTMLOutputItemElement;
    };
    interface HTMLShowcaseUiElement extends Components.ShowcaseUi, HTMLStencilElement {
    }
    var HTMLShowcaseUiElement: {
        prototype: HTMLShowcaseUiElement;
        new (): HTMLShowcaseUiElement;
    };
    interface HTMLElementTagNameMap {
        "headline-system": HTMLHeadlineSystemElement;
        "item-system": HTMLItemSystemElement;
        "output-carousel": HTMLOutputCarouselElement;
        "output-item": HTMLOutputItemElement;
        "showcase-ui": HTMLShowcaseUiElement;
    }
}
declare namespace LocalJSX {
    interface HeadlineSystem {
        "headline"?: string;
    }
    interface ItemSystem {
        "active"?: boolean;
        "attribute"?: string | boolean;
        "checked"?: boolean;
        "invalide"?: boolean;
        "onItemClick"?: (event: ItemSystemCustomEvent<MouseEvent>) => void;
        "onItemToggle"?: (event: ItemSystemCustomEvent<boolean>) => void;
        "toggle"?: boolean;
        "value"?: string;
    }
    interface OutputCarousel {
    }
    interface OutputItem {
        "output"?: Output;
    }
    interface ShowcaseUi {
        "displaying"?: string;
        "imageData"?: string;
        "newMessage"?: string;
        "persons"?: number;
        "username"?: string;
    }
    interface IntrinsicElements {
        "headline-system": HeadlineSystem;
        "item-system": ItemSystem;
        "output-carousel": OutputCarousel;
        "output-item": OutputItem;
        "showcase-ui": ShowcaseUi;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "headline-system": LocalJSX.HeadlineSystem & JSXBase.HTMLAttributes<HTMLHeadlineSystemElement>;
            "item-system": LocalJSX.ItemSystem & JSXBase.HTMLAttributes<HTMLItemSystemElement>;
            "output-carousel": LocalJSX.OutputCarousel & JSXBase.HTMLAttributes<HTMLOutputCarouselElement>;
            "output-item": LocalJSX.OutputItem & JSXBase.HTMLAttributes<HTMLOutputItemElement>;
            "showcase-ui": LocalJSX.ShowcaseUi & JSXBase.HTMLAttributes<HTMLShowcaseUiElement>;
        }
    }
}
