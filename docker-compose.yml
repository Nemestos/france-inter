version: "2"
services:
  app:
    build:
      dockerfile: services/api/Dockerfile
      context: ./
      target: builder

    container_name: app
    restart: always
    command: npm run dev

    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules

    env_file:
      - .env

    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      - minio
      - mongodb
    networks:
      - db
      - bullmq

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - db
    volumes:
      - ./minio:/data
    environment:
      - "MINIO_ACCESS_KEY=${MINIO_ACCESS}"
      - "MINIO_SECRET_KEY=${MINIO_SECRET}"
    command: server /export --console-address ":9001"

  mongodb:
    restart: always
    image: mongo:latest
    ports:
      - "${MONGODB_PORT}:${MONGODB_PORT}"
    volumes:
      - "./database:/data/db"
    command: mongod --quiet --logpath /dev/null --port ${MONGODB_PORT}

    networks:
      - db

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c " /usr/bin/mc config host add myminio http://minio:9000 ${MINIO_ACCESS} ${MINIO_SECRET}; /usr/bin/mc mb myminio/${MINIO_BUCKET}; /usr/bin/mc policy download myminio/${MINIO_BUCKET}; /usr/bin/mc policy set public myminio/${MINIO_BUCKET}; exit 0; "
    networks:
      - db

  redis:
    image: redis:latest
    ports:
      - '${REDIS_PORT:-6379}'
    volumes:
      - './redis-data:/data'
    networks:
      - bullmq
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      timeout: 5s
      retries: 3

networks:
  db:
    driver: bridge
  bullmq:
    driver: bridge

volumes:
  db:
    driver: local
